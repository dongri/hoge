#!/usr/bin/env ruby
require 'net/http'
require 'json'

$LOAD_PATH.unshift(File.join(File.dirname(__FILE__), '..', 'lib'))
require 'version'

BASE_DIR = File.join(Dir.home, ".hoge")
HOGE_FILE = "hoge.json"
PATH = "#{BASE_DIR}/#{HOGE_FILE}"

def putsHelp
  puts "Commands:"
  puts " hoge add [word] [word]"
  puts " hoge rm [number]"
  puts " hoge search [word]"
  puts " hoge translate [word]"
  puts " hoge ls"
end

def mkDirIfNotExist
  if Dir.exist?(BASE_DIR)
    return
  else
    Dir.mkdir(BASE_DIR, 0744)
  end
end

argv = ARGV
if argv.length == 0
  putsHelp()
  exit
end

a = argv[0]
e = argv[1]
j = argv[2]

mkDirIfNotExist()
case a
when "add" then
  data = open(PATH) do |io|
    JSON.load(io)
  end
  data[e] = j
  open(PATH, 'w') do |io|
    JSON.dump(data, io)
  end
when "rm" then
  data = open(PATH) do |io|
    JSON.load(io)
  end
  data.delete(e)
  open(PATH, 'w') do |io|
    JSON.dump(data, io)
  end
when "search" then
  data = open(PATH) do |io|
    JSON.load(io)
  end
  puts data[e]
when "translate" then
  word = URI.escape(e)
  uri = URI("https://www.googleapis.com/language/translate/v2?key="+ENV["GOOGLE_API_KEY"]+"&source=en&target=ja&q="+word)
  response = Net::HTTP.get uri
  output = JSON.parse response
  puts output["data"]["translations"]
when "ls" then
  data = open(PATH) do |io|
    JSON.load(io)
  end
  puts data
else
  putsHelp()
end
